##[fixtures]##
==[New fixture]==
--[input:shouldFail]--
let m = <T: task>(m: Task<[`Read((), string) | T]>) => 10
m<[`Read(string, string)]>(`Return(()))

--[output:expected]--
alias Task#[h02d306973a63fe0a96506957cebf956e63e4dfbd] string#[hd978df838905e7e1bd7bb33530ae12436e3756f4] task#[h1d6249a7982fd223e2fe4bc614e77aba75d5fabe]
let m = <T#[0]: task>(m#[1]: Task<[`Read((), string) | T#[0]]>) => 10
// <T#[0]: task>(Task<[`Read((), string) | T#[0]]>) => 10
/* m => 10 */
alias error:argWrongType#[hfcfe64cbbd9e081476f4c8c4a4b2f8f2f992804f] m#[ha7dadf3d27de43302072c8d92e9a0c06165cde84]
m<[`Read(string, string)]>(
    @error:argWrongType(
        expected: :Task<[`Read((), string) | [`Read(string, string)]]>,
        got: :[`Return()],
        task: :[
            `Return() |
            `Read((), (arg: string) => Task<[`Read((), string) | `Read(string, string)], ()>) |
            `Read(string, (arg: string) => Task<[`Read((), string) | `Read(string, string)], ()>)
        ],
    ) `Return(),
)