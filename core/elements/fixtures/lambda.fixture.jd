##[fixtures]##
==[basic]==
--[input]--
() => 10
(a: 10) => 10
// hello

--[output:expected]--
() => 10
// () => 10
/* () => 10 */
(a#[0]: 10) => 10
// (10) => 10
/* a => 10 */
// hello

==[pattern type mismatch]==
--[input:shouldFail]--
((a, b): 10) => 10

--[output:expected]--
alias error:argWrongType=hfcfe64cbbd9e081476f4c8c4a4b2f8f2f992804f
((a#[0], b#[1]): @error:argWrongType() 10) => 10
// (@error:argWrongType() 10) => 10

==[wait just acessing variable, what happens]==
--[input]--
(a: int) => a

--[output:expected]--
alias int=h942cd67cf31d350ec1f39bcd0c933f586dcd176f
(a#[0]: int) => a#[0]
// (int) => int
/* a => a */

==[playground of dreams]==
--[input:shouldFail]--
(a) => takesInt(a) + 2
((a, b)) => takesInt(a) + takes10(b)
({a, what}) => 10
// this is adding constraints
(a) => takesInt(a) + takes10(a)
// Ok folks, so why does 'res' show up as nothing in the one place,
// but _ on the reparse?
(a) => a(10)

--[output:expected]--
alias +=h3040ed1f3de0b98f18bd2b6daeb0e695cd0b608c int=h942cd67cf31d350ec1f39bcd0c933f586dcd176f takes10=h454b6d446f18aea6c51a4b3599f3bf413c24ee76 takesInt=hd724811982a4afd89c79872d8c1d55048540a958
(a#[0]) => takesInt(a#[0]) + 2
// (int) => int + 2
/* a => takesInt(a) + 2 */
((a#[0], b#[1])) => takesInt(a#[0]) + takes10(b#[1])
// ((int, 10, *)) => int + int
/* ([a, b]) => takesInt(a) + takes10(b) */
({a#[0], what#[1]}) => 10
// ({a: _, what: _, *}) => 10
// this is adding constraints
(a#[0]) => takesInt(a#[0]) + takes10(a#[0])
// (10) => int + int
/* a => takesInt(a) + takes10(a) */
// Ok folks, so why does 'res' show up as nothing in the one place,
// but _ on the reparse?
(a#[0]) => a#[0](10)
// ((10) => _) => _

--[builtins]--
//:value:takesInt:(a: int) => int
//:value:takes10:(a: 10) => int

==[New fixture]==
--[input]--
(a) => "${a}"

--[output:expected]--
alias string=hd978df838905e7e1bd7bb33530ae12436e3756f4
(a#[0]) => "${a#[0]}"
// (string) => string
/* a => `${a}` */

==[New fixture_]==
--[input]--
(a) => takesInt(a) + takes10(a)

--[output:expected]--
alias +=h3040ed1f3de0b98f18bd2b6daeb0e695cd0b608c int=h942cd67cf31d350ec1f39bcd0c933f586dcd176f takes10=h454b6d446f18aea6c51a4b3599f3bf413c24ee76 takesInt=hd724811982a4afd89c79872d8c1d55048540a958
(a#[0]) => takesInt(a#[0]) + takes10(a#[0])
// (10) => int + int
/* a => takesInt(a) + takes10(a) */

--[builtins]--
//:value:takesInt:(a: int) => int
//:value:takes10:(a: 10) => int

==[resolve with int]==
--[input]--
(a) => a + 2

--[output:expected]--
alias +=h3040ed1f3de0b98f18bd2b6daeb0e695cd0b608c int=h942cd67cf31d350ec1f39bcd0c933f586dcd176f
(a#[0]) => a#[0] + 2
// (int) => int + 2
/* a => a + 2 */

==[resolve with non-typeargs]==
--[input]--
(a) => 2.4 + a

--[output:expected]--
alias +=h1b711bccf9aef2b0a1f3a7595ee93b32b87a881e float=h1c9cc9450fe2e869a48abaa5e4a85271e1625474
(a#[0]) => 2.4 + a#[0]
// (float) => float
/* a => 2.4 + a */