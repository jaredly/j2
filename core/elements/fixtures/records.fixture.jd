##[fixtures]##
==[basic]==
--[input]--
type X = {hi: int};
type Y = {...X, ho: int};
type Z = {...Y, hi: float};

--[output:expected]--
alias float=h1c9cc9450fe2e869a48abaa5e4a85271e1625474 int=h942cd67cf31d350ec1f39bcd0c933f586dcd176f X=h69305b9149bbe6b042090d322381635f28a56bf9 Y=h40419435d290c271113b6e153c2d8914ee6157eb
type X = {hi: int}
type Y = {...X, ho: int}
type Z = {...Y, hi: float}

==[failures]==
--[input:shouldFail]--
type X = {...X}
type Y = {...int}
type Z = {...{...Z}}

--[output:expected]--
alias error:invalidRecord=h506e7785537a789d79fa3a8c084d3fffe5751757 error:notARecord=hd698a9fde2a4cf1505e7a7bbb328bed86802f545 int=h942cd67cf31d350ec1f39bcd0c933f586dcd176f
type X = {...@error:invalidRecord() X#[r0]}
type Y = {...@error:notARecord() int}
type Z = {...@error:invalidRecord() {...@error:invalidRecord() Z#[r0]}}

==[default values]==
--[input]--
type X = {x: int = 3}
type Y = {...X}

--[output:expected]--
alias int=h942cd67cf31d350ec1f39bcd0c933f586dcd176f X=hc50a39c60286ff2cfca90d33b7139ffaf7f3ca2c
type X = {x: int = 3}
type Y = {...X}