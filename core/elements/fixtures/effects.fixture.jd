##[fixtures]##
==[typed print]==
--[input]--
let print = (v: string): Task<[`Print(string, ())]> => `Print(v, () => `Return())

--[output:failed]--
alias error:resMismatch=hb090f18487ae3bd77546a5c35ccf59b6adf3aa59 string=hd978df838905e7e1bd7bb33530ae12436e3756f4
let print = (v#[0]: string):@error:resMismatch(inferrred: :[ `Print(string, () => ()) ]) Task#[:unresolved:]<
    [ `Print(string, ()) ],
    (),
> => `Print(v#[0], () => ())
// (string) => [ `Print(string, () => ()) ]

==[untyped print]==
--[input]--
let print = (v: string) => `Print(v, () => `Return())

--[output:expected]--
alias string=hd978df838905e7e1bd7bb33530ae12436e3756f4
let print = (v#[0]: string) => `Print(v#[0], () => `Return())
// (string) => [ `Print(string, () => [ `Return() ]) ]
/* v => ({
  tag: "Print",
  payload: [v, () => ({
    tag: "Return",
    payload: null
  })]
}) */

==[ensure we can unify with a larger task type]==
--[input]--
(v: Task<[`One((), [])]>): Task<[`One((), []) | `Two((), [])]> => v

--[output:expected]--
alias Task=h36ea667ef0c00c6fcbfe2206360b8ce768e10926
(v#[0]: Task<[ `One((), []) ]>):Task<[ `One((), []) | `Two((), []) ]> => v#[0]
// (Task<[ `One((), []) ]>) => Task<[ `One((), []) ]>
/* v => v */