##[fixtures]##
==[typed print]==
--[input]--
let print = (v: string): Task<[`Print(string, ())]> => `Print(v, () => `Return())

--[output:expected]--
alias string=hd978df838905e7e1bd7bb33530ae12436e3756f4 Task=h36ea667ef0c00c6fcbfe2206360b8ce768e10926
let print = (v#[0]: string):Task<[ `Print(string, ()) ]> => `Print(v#[0], () => `Return())
// (string) => [ `Print(string, () => [ `Return() ]) ]
/* v => ({
  tag: "Print",
  payload: [v, () => ({
    tag: "Return",
    payload: null
  })]
}) */

==[untyped print]==
--[input]--
let print = (v: string) => `Print(v, () => `Return())

--[output:expected]--
alias string=hd978df838905e7e1bd7bb33530ae12436e3756f4
let print = (v#[0]: string) => `Print(v#[0], () => `Return())
// (string) => [ `Print(string, () => [ `Return() ]) ]
/* v => ({
  tag: "Print",
  payload: [v, () => ({
    tag: "Return",
    payload: null
  })]
}) */

==[ensure we can unify with a larger task type]==
--[input]--
(v: Task<[`One((), [])]>): Task<[`One((), []) | `Two((), [])]> => v

--[output:expected]--
alias Task=h36ea667ef0c00c6fcbfe2206360b8ce768e10926
(v#[0]: Task<[ `One((), []) ]>):Task<[ `One((), []) | `Two((), []) ]> => v#[0]
// (Task<[ `One((), []) ]>) => Task<[ `One((), []) ]>
/* v => v */

==[New fixture]==
--[input]--
let print = (v: string): Task<[`Print(string, ())]> => `Pront(v, () => `Return())
let print = (v: string): Task<[`Print(string, ())]> => `Print(v, () => `Return(10))

--[output:expected]--
alias error:resMismatch=hb090f18487ae3bd77546a5c35ccf59b6adf3aa59 string=hd978df838905e7e1bd7bb33530ae12436e3756f4 Task=h36ea667ef0c00c6fcbfe2206360b8ce768e10926
let print = (v#[0]: string):@error:resMismatch(inferrred: :[ `Pront(string, () => [ `Return() ]) ]) Task<
    [ `Print(string, ()) ],
> => `Pront(v#[0], () => `Return())
// (string) => [ `Pront(string, () => [ `Return() ]) ]
let print = (v#[0]: string):@error:resMismatch(
    inferrred: :[ `Print(string, () => [ `Return(10) ]) ],
) Task<[ `Print(string, ()) ]> => `Print(v#[0], () => `Return(10))
// (string) => [ `Print(string, () => [ `Return(10) ]) ]

==[multiple effects]==
--[input]--
let hello = (): Task<[`Print(string, ()) | `Read((), string)]> => {
  `Print("hello", () => {
    `Read((), (v: string) => {
      `Print("Got ${v}", () => {
        `Print("done", () => `Return())
      })
    })
  })
}

--[output:expected]--
alias string=hd978df838905e7e1bd7bb33530ae12436e3756f4 Task=h36ea667ef0c00c6fcbfe2206360b8ce768e10926
let hello = ():Task<[ `Print(string, ()) | `Read((), string) ]> => {
    `Print(
        "hello",
        () => {
            `Read(
                (),
                (v#[0]: string) => {
                    `Print("Got ${v#[0]}", () => {
                        `Print("done", () => `Return());
                    });
                },
            );
        },
    );
}
// () => [ `Print("hello", () => [ `Read((), (string) => [ `Print(string, () => [ `Print("done", () => [ `Return() ]) ]) ]) ]) ]
/* () => (() => {
  return {
    tag: "Print",
    payload: [`hello`, () => (() => {
      return {
        tag: "Read",
        payload: [null, v => (() => {
          return {
            tag: "Print",
            payload: [`Got ${v}`, () => (() => {
              return {
                tag: "Print",
                payload: [`done`, () => ({
                  tag: "Return",
                  payload: null
                })]
              };
            })()]
          };
        })()]
      };
    })()]
  };
})() */