==[basic]==

@test:type(: bool) 10
-->
@test:type#[he071eaec952a7917f20d1828e42268ca3a10c513](
    :bool#[h850edf082092e835e7daddfaf30654b2289f5644],
) 10
// 10

==[constants]==

@test:type(: "hello", : 10) "target"
-->
@test:type#[he071eaec952a7917f20d1828e42268ca3a10c513](:"hello", :10) "target"
// "target"

==[lambdas]==

@test:type(: () => 10, :(v: int, float) => int) "ok"
-->
@test:type#[he071eaec952a7917f20d1828e42268ca3a10c513](
    :() => 10,
    :(
        v: int#[h2f181c91131fd0daa282424fb3953604513df6fe],
        float#[h82403bb59c4f81033c8b3085e8861245660c31e0],
    ) => int#[h2f181c91131fd0daa282424fb3953604513df6fe],
) "ok"
// "ok"

==[tvars]==

@test:type(: <T>(v: T) => T) 10
-->
@test:type#[he071eaec952a7917f20d1828e42268ca3a10c513](
    :<T>(v: T#[:unresolved:]) => T#[:unresolved:],
) 10
// 10
-->
ğŸš¨ 2 missing types

==[unresovled]==

@test:type(: hello) 10
-->
@test:type#[he071eaec952a7917f20d1828e42268ca3a10c513](:hello#[:unresolved:]) 10
// 10
-->
ğŸš¨ 1 missing types