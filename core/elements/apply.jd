==[well-typed builtin call]==

toString(1)
-->
toString#[hb906415c72c78c3b88d97d9c8adad6d0f4e89b02](1)
// string#[h8f452146b75c912dedc5638091c55a088e30b7ee]

==[multiple args]==
//:value:twoArgs: (one: int, two: string) => string

twoArgs(1, "hello")
-->
twoArgs#[h1dd55b3629241bfa7b281be99d7b03a6ca6317ae](1, "hello")
// string#[h8f452146b75c912dedc5638091c55a088e30b7ee]

==[arg type error]==

toString(true)
-->
toString#[hb906415c72c78c3b88d97d9c8adad6d0f4e89b02](
    @error:argWrongType#[hfcfe64cbbd9e081476f4c8c4a4b2f8f2f992804f](
        expected: :int#[h2f181c91131fd0daa282424fb3953604513df6fe],
    ) true,
)
// string#[h8f452146b75c912dedc5638091c55a088e30b7ee]
-->
ğŸš¨ 1 error decorators

==[wrong number of types]==

toString(1, 2)
-->
@error:wrongNumberOfArgs#[he554807c644be72e6c4e5cb59aa0955f9ab67f13]() toString#[hb906415c72c78c3b88d97d9c8adad6d0f4e89b02](
    1,
    2,
)
// string#[h8f452146b75c912dedc5638091c55a088e30b7ee]
-->
ğŸš¨ 1 error decorators

==[not a fn]==

(10)(20)
-->
@error:notAFunction#[h16ba48b37c7d5999c12c172bd1bbdeac9773c21a]() 10(20)
-->
ğŸš¨ 1 error decorators
ğŸš¨ 2 missing types

==[calling undefined function]==

undefinedFunction()
-->
undefinedFunction#[:unresolved:]()
-->
ğŸš¨ 2 missing types

==[double apply]==

toString(1)()
-->
@error:notAFunction#[h16ba48b37c7d5999c12c172bd1bbdeac9773c21a]() toString#[hb906415c72c78c3b88d97d9c8adad6d0f4e89b02](
    1,
)()
-->
ğŸš¨ 1 error decorators
ğŸš¨ 2 missing types