(v) => v + 1
((v) => v + 1)(2)
({age}) => age + 1
(v) => switch v {
    `One => 1;
    `Two => 2;
    `Three => 3;
}
let wint = (v: int) => v + 1
(v) => wint(v)
let w10 = (v: 10) => v + 2
(v) => wint(v) + w10(v)
let wage = (v: {age: int}) => 10
(v) => wage({age: v})
let wname = (v: [`Age(int)]) => 10
(v) => wname(`Age(v))
(v) => switch v {
    {age} => wint(age);
}
(v) => switch v {
    `One => 1;
    `Hi(n) => wint(n);
    `Ho({n}) => wint(n);
}
(v) => "Hi ${v}"
(a): int => a(10)
({a}): int => a
(`A(a)): int => a
let ok = <T>(a: T) => a
ok(10)
let ok = <T>(a: [`Hi(T)]) => 1
ok(`Hi(10))
let mk = <A, B: int>(a: [`Hi(A, B)]) => a
mk(`Hi("hi", 2))